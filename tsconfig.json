{
    "compilerOptions": {
        /* Basic Options */
        "allowJs": true /* Allow javascript files to be compiled. */,
        "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
        "jsx": "react-native" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
        "lib": ["es6"] /* Specify library files to be included in the compilation. */,
        "module": "esnext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'esnext'. */,
        "noEmit": true /* Do not emit outputs. */,
        "rootDir": "./" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
        "target": "esnext" /* Specify ECMAScript target version: 'es3' (default), 'es5', 'es2015', 'es2016', 'es2017','es2018' or 'esnext'. */,
        // "checkJs": true,                       /* Report errors in .js files. */
        // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
        // "incremental": true,                   /* Enable incremental compilation */
        // "outFile": "./",                       /* Concatenate and emit output to single file. */
        // "outDir": "./",                        /* Redirect output structure to the directory. */
        // "removeComments": true,                /* Do not emit comments to output. */
        // "sourceMap": true,                     /* Generates corresponding '.map' file. */

        /* Strict Type-Checking Options */
        "strict": true /* Enable all strict type-checking options. */,
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
        // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
        // "strictNullChecks": true,              /* Enable strict null checks. */
        // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */

        /* Additional Checks */
        // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
        // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
        // "noUnusedLocals": true,                /* Report errors on unused locals. */
        // "noUnusedParameters": true,            /* Report errors on unused parameters. */

        /* Module Resolution Options */
        "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
        // "baseUrl": "./", /* Base directory to resolve non-absolute module names. */
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        // "paths": {
        //     "*": ["src/*"],
        //     "tests": ["__tests__/*"]
        // } /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
        // "types": [],                           /* Type declaration files to be included in compilation. */
        // "typeRoots": [],                       /* List of folders to include type definitions from. */

        /* Source Map Options */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
        // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
        // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */

        /* Experimental Options */
        // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
        // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    },
    "exclude": ["babel.config.js", "node_modules", "jest.config.js", "metro.config.js", "react-native.config.js", "__tests__/**/*"]
}
